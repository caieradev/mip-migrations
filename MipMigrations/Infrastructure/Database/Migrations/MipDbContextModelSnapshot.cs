// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MipMigrations.Infrastructure.Database;

#nullable disable

namespace MipMigrations.Infrastructure.Database.Migrations
{
    [DbContext(typeof(MipDbContext))]
    partial class MipDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.CidadeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS012_CIDADE_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS012_ATIVO");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS012_CODIGO_IBGE");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS012_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS012_DATA_CADASTRO");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS011_ESTADO_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS012_NOME");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("SIS012_CIDADE", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.CnaeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS017_CNAE_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS017_ATIVO");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS017_CODIGO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS017_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS017_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SIS017_CNAE", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.ContatoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS014_CONTATO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS014_ATIVO");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS014_CELULAR");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS014_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS014_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS014_DESCRICAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS014_EMAIL");

                    b.Property<string>("EmailCobranca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS014_EMAIL_COBRANCA");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS014_SITE");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS014_TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("SIS014_CONTATO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaCnaeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS018_EMPRESA_CNAE_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS018_ATIVO");

                    b.Property<Guid>("CnaeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS017_CNAE_ID");

                    b.Property<bool>("CnaePrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("SIS018_CNAE_PRINCIPAL");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS018_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS018_DATA_CADASTRO");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS002_EMPRESA_ID");

                    b.HasKey("Id");

                    b.HasIndex("CnaeId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("SIS018_EMPRESA_CNAE", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS002_EMPRESA_ID");

                    b.Property<string>("AtividadePrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_ATIVIDADE_PRINCIPAL");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS002_ATIVO");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_CNPJ");

                    b.Property<Guid>("ContatoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS014_CONTATO_ID");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS002_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS002_DATA_CADASTRO");

                    b.Property<string>("DescricaoAtividade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_DESCRICAO_ATIVIDADE");

                    b.Property<Guid>("EnderecoFiscalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS013_ENDERECO_FISCAL_ID");

                    b.Property<int>("FaturamentoUltimoAno")
                        .HasColumnType("int")
                        .HasColumnName("SIS002_FATURAMENTO_ULTIMO_ANO");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_INSCRICAO_ESTADUAL");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_INSCRICAO_MUNICIPAL");

                    b.Property<bool>("IsentoInscricaoEstadual")
                        .HasColumnType("bit")
                        .HasColumnName("SIS002_ISENTO_INSCRICAO_ESTADUAL");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_NOME_FANTASIA");

                    b.Property<int>("NumeroFuncionarios")
                        .HasColumnType("int")
                        .HasColumnName("SIS002_NUMERO_FUNCIONARIOS");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS002_RAZAO_SOCIAL");

                    b.Property<int>("RegimeTributario")
                        .HasColumnType("int")
                        .HasColumnName("SIS002_REGIME_TRIBUTARIO");

                    b.Property<int>("TamanhoEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("SIS002_TAMANHO_EMPRESA");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS001_TENANT_ID");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("SIS002_EMPRESA", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaImagemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS015_EMPRESA_IMAGEM_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS015_ATIVO");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS015_CONTENT_TYPE");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS015_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS015_DATA_CADASTRO");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS002_EMPRESA_ID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS015_FILE_NAME");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("SIS015_FILE_SIZE");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS015_IMAGE_ID");

                    b.Property<string>("ThumbContentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS015_THUMB_CONTENT_TYPE");

                    b.Property<long?>("ThumbFileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("SIS015_THUMB_FILE_SIZE");

                    b.Property<Guid?>("ThumbImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS015_THUMB_IMAGE_ID");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("SIS015_EMPRESA_IMAGEM", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaPessoaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS004_EMPRESA_PESSOA_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS004_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS004_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS004_DATA_CADASTRO");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS002_EMPRESA_ID");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS003_PESSOA_ID");

                    b.Property<bool>("Socio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("SIS004_SOCIO");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("SIS004_EMPRESA_PESSOA", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaSegmentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS022_EMPRESA_SEGMENTO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS022_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS022_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS022_DATA_CADASTRO");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS002_EMPRESA_ID");

                    b.Property<Guid>("SegmentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS020_SEGMENTO_ID");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("SegmentoId");

                    b.ToTable("SIS022_EMPRESA_SEGMENTO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EnderecoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS013_ENDERECO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS013_ATIVO");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS013_BAIRRO");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS013_CEP");

                    b.Property<Guid>("CidadeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS012_CIDADE_ID");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS013_COMPLEMENTO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS013_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS013_DATA_CADASTRO");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS002_EMPRESA_ID");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS013_LOGRADOURO");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS013_NUMERO");

                    b.Property<Guid?>("PessoaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS003_PESSOA_ID");

                    b.Property<Guid>("TipoEnderecoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS019_TIPO_ENDERECO_ID");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TipoEnderecoId");

                    b.ToTable("SIS013_ENDERECO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EstadoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS011_ESTADO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS011_ATIVO");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS011_CODIGO_IBGE");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS011_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS011_DATA_CADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS011_NOME");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS011_SIGLA");

                    b.HasKey("Id");

                    b.ToTable("SIS011_ESTADO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.NodoServicoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS010_NODO_SERVICO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS010_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS010_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS010_DATA_CADASTRO");

                    b.Property<bool>("Root")
                        .HasColumnType("bit")
                        .HasColumnName("SIS010_ROOT");

                    b.Property<Guid?>("ServicoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS009_SERVICO_ID");

                    b.Property<Guid?>("ServicoPaiId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS009_SERVICO_PAI_ID");

                    b.Property<bool>("Tail")
                        .HasColumnType("bit")
                        .HasColumnName("SIS010_TAIL");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId");

                    b.ToTable("SIS010_NODO_SERVICO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PessoaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS003_PESSOA_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS003_ATIVO");

                    b.Property<Guid>("ContatoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS014_CONTATO_ID");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS003_CPF");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS003_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS003_DATA_CADASTRO");

                    b.Property<DateTimeOffset>("DataNascimento")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS003_DATA_NASCIMENTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS003_NOME");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS001_TENANT_ID");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS005_USUARIO_ID");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("SIS003_PESSOA", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PessoaImagemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS016_PESSOA_IMAGEM_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS016_ATIVO");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS016_CONTENT_TYPE");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS016_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS016_DATA_CADASTRO");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS016_FILE_NAME");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("SIS016_FILE_SIZE");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS016_IMAGE_ID");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS003_PESSOA_ID");

                    b.Property<string>("ThumbContentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS016_THUMB_CONTENT_TYPE");

                    b.Property<long?>("ThumbFileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("SIS016_THUMB_FILE_SIZE");

                    b.Property<Guid?>("ThumbImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS016_THUMB_IMAGE_ID");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("SIS016_PESSOA_IMAGEM", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PlanoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS007_PLANO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS007_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS007_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS007_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS007_DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS007_NOME");

                    b.Property<double>("Valor")
                        .HasColumnType("float")
                        .HasColumnName("SIS007_VALOR");

                    b.HasKey("Id");

                    b.ToTable("SIS007_PLANO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PlanoNodoServicoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS021_PLANO_NODO_SERVICO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS021_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS021_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS021_DATA_CADASTRO");

                    b.Property<Guid>("NodoServicoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS010_NODO_SERVICO_ID");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS007_PLANO_ID");

                    b.HasKey("Id");

                    b.HasIndex("NodoServicoId");

                    b.HasIndex("PlanoId");

                    b.ToTable("SIS021_PLANO_NODO_SERVICO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.SegmentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS020_SEGMENTO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS020_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS020_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS020_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS020_DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SIS020_SEGMENTO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.ServicoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS009_SERVICO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS009_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS009_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS009_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS009_DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS009_NOME");

                    b.HasKey("Id");

                    b.ToTable("SIS009_SERVICO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TenantEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS001_TENANT_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS001_ATIVO");

                    b.Property<bool>("CaieraDev")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("SIS001_CAIERA_DEV");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS001_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS001_DATA_CADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS001_NOME");

                    b.HasKey("Id");

                    b.ToTable("SIS001_TENANT", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TenantPlanoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS008_TENANT_PLANO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS008_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS008_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS008_DATA_CADASTRO");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS007_PLANO_ID");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS001_TENANT_ID");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.HasIndex("TenantId");

                    b.ToTable("SIS008_TENANT_PLANO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TipoEnderecoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS019_TIPO_ENDERECO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS019_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS019_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS019_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS019_DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SIS019_TIPO_ENDERECO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TipoUsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS006_TIPO_USUARIO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS006_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS006_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS006_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS006_DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SIS006_TIPO_USUARIO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS005_USUARIO_ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SIS005_ATIVO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS005_DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("SIS005_DATA_CADASTRO");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS003_PESSOA_ID");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS005_SENHA");

                    b.Property<Guid>("TipoUsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SIS006_TIPO_USUARIO_ID");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIS005_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("SIS005_USUARIO", (string)null);
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.CidadeEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.EstadoEntity", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.ContatoEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithOne("Contato")
                        .HasForeignKey("MipMigrations.Domain.Application.Entities.ContatoEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaCnaeEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.CnaeEntity", "Cnae")
                        .WithMany("EmpresaCnaes")
                        .HasForeignKey("CnaeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaCnaesSecundarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cnae");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.EnderecoEntity", "EnderecoFiscal")
                        .WithOne("Empresa")
                        .HasForeignKey("MipMigrations.Domain.Application.Entities.EmpresaEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.TenantEntity", "Tenant")
                        .WithMany("Empresas")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EnderecoFiscal");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaImagemEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaImagens")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaPessoaEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaPessoas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithMany("EmpresaPessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaSegmentoEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaSegmentos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.SegmentoEntity", "Segmento")
                        .WithMany("EmpresaSegmentos")
                        .HasForeignKey("SegmentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Segmento");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EnderecoEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.CidadeEntity", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MipMigrations.Domain.Application.Entities.TipoEnderecoEntity", "TipoEndereco")
                        .WithMany("Enderecos")
                        .HasForeignKey("TipoEnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Pessoa");

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.NodoServicoEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.NodoServicoEntity", "ServicoPai")
                        .WithMany("ServicosFilhos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MipMigrations.Domain.Application.Entities.ServicoEntity", "Servico")
                        .WithMany("NodoServicos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Servico");

                    b.Navigation("ServicoPai");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PessoaEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.ContatoEntity", "Contato")
                        .WithOne("Pessoa")
                        .HasForeignKey("MipMigrations.Domain.Application.Entities.PessoaEntity", "ContatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.TenantEntity", "Tenant")
                        .WithMany("Pessoas")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PessoaImagemEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithMany("PessoaImagens")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PlanoNodoServicoEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.NodoServicoEntity", "NodoServico")
                        .WithMany("PlanoNodoServicos")
                        .HasForeignKey("NodoServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.PlanoEntity", "Plano")
                        .WithMany("PlanoNodoServicos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NodoServico");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TenantPlanoEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.PlanoEntity", "Plano")
                        .WithMany("TenantPlanos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.TenantEntity", "Tenant")
                        .WithMany("TenantPlanos")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plano");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.UsuarioEntity", b =>
                {
                    b.HasOne("MipMigrations.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithOne("Usuario")
                        .HasForeignKey("MipMigrations.Domain.Application.Entities.UsuarioEntity", "PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.Domain.Application.Entities.TipoUsuarioEntity", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.CidadeEntity", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.CnaeEntity", b =>
                {
                    b.Navigation("EmpresaCnaes");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.ContatoEntity", b =>
                {
                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EmpresaEntity", b =>
                {
                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("EmpresaCnaesSecundarios");

                    b.Navigation("EmpresaImagens");

                    b.Navigation("EmpresaPessoas");

                    b.Navigation("EmpresaSegmentos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EnderecoEntity", b =>
                {
                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.EstadoEntity", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.NodoServicoEntity", b =>
                {
                    b.Navigation("PlanoNodoServicos");

                    b.Navigation("ServicosFilhos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PessoaEntity", b =>
                {
                    b.Navigation("EmpresaPessoas");

                    b.Navigation("Enderecos");

                    b.Navigation("PessoaImagens");

                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.PlanoEntity", b =>
                {
                    b.Navigation("PlanoNodoServicos");

                    b.Navigation("TenantPlanos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.SegmentoEntity", b =>
                {
                    b.Navigation("EmpresaSegmentos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.ServicoEntity", b =>
                {
                    b.Navigation("NodoServicos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TenantEntity", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Pessoas");

                    b.Navigation("TenantPlanos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TipoEnderecoEntity", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("MipMigrations.Domain.Application.Entities.TipoUsuarioEntity", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
