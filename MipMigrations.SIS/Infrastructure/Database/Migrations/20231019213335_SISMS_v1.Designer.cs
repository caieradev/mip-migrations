// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MipMigrations.SIS.Infrastructure.Database;

#nullable disable

namespace MipMigrations.SIS.Infrastructure.Database.Migrations
{
    [DbContext(typeof(MipSisDbContext))]
    [Migration("20231019213335_SISMS_v1")]
    partial class SISMS_v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.CidadeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.CnaeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cnaes");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.ContatoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCobranca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.HasIndex("PessoaId")
                        .IsUnique()
                        .HasFilter("[PessoaId] IS NOT NULL");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaCnaeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CnaeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CnaePrincipal")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CnaeId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("EmpresaCnaes");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtividadePrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DescricaoAtividade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EnderecoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FaturamentoUltimoAno")
                        .HasColumnType("int");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsentoInscricaoEstadual")
                        .HasColumnType("bit");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroFuncionarios")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegimeTributario")
                        .HasColumnType("int");

                    b.Property<int>("TamanhoEmpresa")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaImagemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ThumbContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ThumbFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ThumbFileSize")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("EmpresaImagens");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaPessoaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Socio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("EmpresaPessoas");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaSegmentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SegmentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("SegmentoId");

                    b.ToTable("EmpresaSegmentos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EnderecoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoEnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EmpresaId")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TipoEnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EstadoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.NodoServicoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Root")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServicoPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Tail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId");

                    b.HasIndex("ServicoPaiId");

                    b.ToTable("NodoServicos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("ContatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataNascimento")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PessoaImagemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ThumbFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ThumbFileSize")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("PessoaImagens");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PlanoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PlanoNodoServicoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("NodoServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NodoServicoId");

                    b.HasIndex("PlanoId");

                    b.ToTable("PlanoNodoServicos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.SegmentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Segmentos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.ServicoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TenantEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("CaieraDev")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TenantPlanoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantPlanos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TipoEnderecoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEnderecos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TipoUsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.CidadeEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EstadoEntity", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.ContatoEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithOne("Contato")
                        .HasForeignKey("MipMigrations.SIS.Domain.Application.Entities.ContatoEntity", "EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithOne("Contato")
                        .HasForeignKey("MipMigrations.SIS.Domain.Application.Entities.ContatoEntity", "PessoaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaCnaeEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.CnaeEntity", "Cnae")
                        .WithMany("EmpresaCnaes")
                        .HasForeignKey("CnaeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaCnaesSecundarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cnae");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.TenantEntity", "Tenant")
                        .WithMany("Empresas")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaImagemEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaImagens")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaPessoaEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaPessoas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithMany("EmpresaPessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaSegmentoEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithMany("EmpresaSegmentos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.SegmentoEntity", "Segmento")
                        .WithMany("EmpresaSegmentos")
                        .HasForeignKey("SegmentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Segmento");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EnderecoEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.CidadeEntity", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", "Empresa")
                        .WithOne("EnderecoFiscal")
                        .HasForeignKey("MipMigrations.SIS.Domain.Application.Entities.EnderecoEntity", "EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.TipoEnderecoEntity", "TipoEndereco")
                        .WithMany("Enderecos")
                        .HasForeignKey("TipoEnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Empresa");

                    b.Navigation("Pessoa");

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.NodoServicoEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.ServicoEntity", "Servico")
                        .WithMany("NodoServicos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.NodoServicoEntity", "ServicoPai")
                        .WithMany("ServicosFilhos")
                        .HasForeignKey("ServicoPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Servico");

                    b.Navigation("ServicoPai");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.TenantEntity", "Tenant")
                        .WithMany("Pessoas")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PessoaImagemEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithMany("PessoaImagens")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PlanoNodoServicoEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.NodoServicoEntity", "NodoServico")
                        .WithMany("PlanoNodoServicos")
                        .HasForeignKey("NodoServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PlanoEntity", "Plano")
                        .WithMany("PlanoNodoServicos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NodoServico");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TenantPlanoEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PlanoEntity", "Plano")
                        .WithMany("TenantPlanos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.TenantEntity", "Tenant")
                        .WithMany("TenantPlanos")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plano");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.UsuarioEntity", b =>
                {
                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", "Pessoa")
                        .WithOne("Usuario")
                        .HasForeignKey("MipMigrations.SIS.Domain.Application.Entities.UsuarioEntity", "PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MipMigrations.SIS.Domain.Application.Entities.TipoUsuarioEntity", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.CidadeEntity", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.CnaeEntity", b =>
                {
                    b.Navigation("EmpresaCnaes");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EmpresaEntity", b =>
                {
                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("EmpresaCnaesSecundarios");

                    b.Navigation("EmpresaImagens");

                    b.Navigation("EmpresaPessoas");

                    b.Navigation("EmpresaSegmentos");

                    b.Navigation("EnderecoFiscal")
                        .IsRequired();
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.EstadoEntity", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.NodoServicoEntity", b =>
                {
                    b.Navigation("PlanoNodoServicos");

                    b.Navigation("ServicosFilhos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PessoaEntity", b =>
                {
                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("EmpresaPessoas");

                    b.Navigation("Enderecos");

                    b.Navigation("PessoaImagens");

                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.PlanoEntity", b =>
                {
                    b.Navigation("PlanoNodoServicos");

                    b.Navigation("TenantPlanos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.SegmentoEntity", b =>
                {
                    b.Navigation("EmpresaSegmentos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.ServicoEntity", b =>
                {
                    b.Navigation("NodoServicos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TenantEntity", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Pessoas");

                    b.Navigation("TenantPlanos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TipoEnderecoEntity", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("MipMigrations.SIS.Domain.Application.Entities.TipoUsuarioEntity", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
